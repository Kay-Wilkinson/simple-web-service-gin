name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: dev_user
          POSTGRES_PASSWORD: dev_password
          POSTGRES_DB: dev_dbname
        options: >-
          --health-cmd "pg_isready -U dev_user -d dev_dbname"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    - name: Build Docker image
      run: docker build . -t ghcr.io/${{ secrets.GHCR_USERNAME }}/web-service-gin:latest

    - name: Push Docker image to GitHub Container Registry
      run: docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/web-service-gin:latest

    - name: Install Dockerize
      run: |
        curl -L https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz > dockerize.tar.gz
        tar -C /usr/local/bin -xzvf dockerize.tar.gz
        rm dockerize.tar.gz

    - name: Run tests
      run: |
        docker run --rm --network host ghcr.io/kay-wilkinson/web-service-gin:latest sh -c "
          dockerize -wait tcp://localhost:5432 -timeout 60s &&
          go test ./tests/...
        "
